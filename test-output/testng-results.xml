<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="34" passed="32" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-03-04T19:45:10 ART" name="TestSuite" finished-at="2022-03-04T19:47:06 ART" duration-ms="115542">
    <groups>
    </groups>
    <test started-at="2022-03-04T19:45:10 ART" name="CHROME" finished-at="2022-03-04T19:46:04 ART" duration-ms="54058">
      <class name="DeckBuildTest.TestDeckBuild">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String)[pri:0, instance:DeckBuildTest.TestDeckBuild@25cde5bb]" started-at="2022-03-04T19:45:10 ART" name="setUp" finished-at="2022-03-04T19:45:16 ART" duration-ms="5297" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[CHROME]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://localhost:4444/wd/hub]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="test_1_Navegacion()[pri:1, instance:DeckBuildTest.TestDeckBuild@25cde5bb]" started-at="2022-03-04T19:45:16 ART" name="test_1_Navegacion" finished-at="2022-03-04T19:45:46 ART" duration-ms="30397" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1_Navegacion -->
        <test-method signature="test_2_Construccion(java.lang.String,int,java.lang.String)[pri:2, instance:DeckBuildTest.TestDeckBuild@25cde5bb]" started-at="2022-03-04T19:45:46 ART" name="test_2_Construccion" data-provider="deckCards" finished-at="2022-03-04T19:45:48 ART" duration-ms="1608" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[//img[contains(@src, 'C_119611010.png')]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Vampiro Carmesí]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2_Construccion -->
        <test-method signature="test_2_Construccion(java.lang.String,int,java.lang.String)[pri:2, instance:DeckBuildTest.TestDeckBuild@25cde5bb]" started-at="2022-03-04T19:45:48 ART" name="test_2_Construccion" data-provider="deckCards" finished-at="2022-03-04T19:45:49 ART" duration-ms="1415" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[//img[contains(@src, 'C_122613010.png')]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Colgante de Sangre Fresca]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2_Construccion -->
        <test-method signature="test_2_Construccion(java.lang.String,int,java.lang.String)[pri:2, instance:DeckBuildTest.TestDeckBuild@25cde5bb]" started-at="2022-03-04T19:45:49 ART" name="test_2_Construccion" data-provider="deckCards" finished-at="2022-03-04T19:45:49 ART" duration-ms="43" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[//img[contains(@src, 'C_118611010.png')]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Lic�ntropa Peleona]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//img[contains(@src, 'C_118611010.png')]"}
  (Session info: chrome=98.0.4758.102)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'elzevir-N56VB', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '5.13.0-30-generic', java.version: '16.0.2'
Driver info: org.openqa.selenium.remote.RemoteWebDriver
Command: [a45be35f8c223e0d6ecc39a303327a5d, findElement {using=xpath, value=//img[contains(@src, 'C_118611010.png')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 98.0.4758.102, chrome: {chromedriverVersion: 98.0.4758.102 (273bf7ac8c90..., userDataDir: /tmp/.com.google.Chrome.qFz0NR}, goog:chromeOptions: {debuggerAddress: localhost:39017}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: ANY, platformName: ANY, proxy: Proxy(), se:cdp: ws://192.168.100.3:4444/ses..., se:cdpVersion: 98.0.4758.102, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: a45be35f8c223e0d6ecc39a303327a5d]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//img[contains(@src, 'C_118611010.png')]"}
  (Session info: chrome=98.0.4758.102)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'elzevir-N56VB', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '5.13.0-30-generic', java.version: '16.0.2'
Driver info: org.openqa.selenium.remote.RemoteWebDriver
Command: [a45be35f8c223e0d6ecc39a303327a5d, findElement {using=xpath, value=//img[contains(@src, 'C_118611010.png')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 98.0.4758.102, chrome: {chromedriverVersion: 98.0.4758.102 (273bf7ac8c90..., userDataDir: /tmp/.com.google.Chrome.qFz0NR}, goog:chromeOptions: {debuggerAddress: localhost:39017}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: ANY, platformName: ANY, proxy: Proxy(), se:cdp: ws://192.168.100.3:4444/ses..., se:cdpVersion: 98.0.4758.102, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: a45be35f8c223e0d6ecc39a303327a5d
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.TracedCommandExecutor.execute(TracedCommandExecutor.java:51)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:558)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:382)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at PageModel.Base.clickCarta(Base.java:35)
at DeckBuildTest.TestDeckBuild.test_2_Construccion(TestDeckBuild.java:104)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2_Construccion -->
        <test-method signature="test_2_Construccion(java.lang.String,int,java.lang.String)[pri:2, instance:DeckBuildTest.TestDeckBuild@25cde5bb]" started-at="2022-03-04T19:45:49 ART" name="test_2_Construccion" data-provider="deckCards" finished-at="2022-03-04T19:45:51 ART" duration-ms="1387" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[//img[contains(@src, 'C_120621010.png')]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Diabla de los Accesorios]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2_Construccion -->
        <test-method signature="test_2_Construccion(java.lang.String,int,java.lang.String)[pri:2, instance:DeckBuildTest.TestDeckBuild@25cde5bb]" started-at="2022-03-04T19:45:51 ART" name="test_2_Construccion" data-provider="deckCards" finished-at="2022-03-04T19:45:52 ART" duration-ms="1368" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[//img[contains(@src, 'C_100614020.png')]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Garra Afilada]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2_Construccion -->
        <test-method signature="test_2_Construccion(java.lang.String,int,java.lang.String)[pri:2, instance:DeckBuildTest.TestDeckBuild@25cde5bb]" started-at="2022-03-04T19:45:52 ART" name="test_2_Construccion" data-provider="deckCards" finished-at="2022-03-04T19:45:53 ART" duration-ms="1408" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[//img[contains(@src, 'C_122634010.png')]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Orden Oscura]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2_Construccion -->
        <test-method signature="test_2_Construccion(java.lang.String,int,java.lang.String)[pri:2, instance:DeckBuildTest.TestDeckBuild@25cde5bb]" started-at="2022-03-04T19:45:53 ART" name="test_2_Construccion" data-provider="deckCards" finished-at="2022-03-04T19:45:55 ART" duration-ms="1330" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[//img[contains(@src, 'C_121641030.png')]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Urias, Vampiro del Fin]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2_Construccion -->
        <test-method signature="test_2_Construccion(java.lang.String,int,java.lang.String)[pri:2, instance:DeckBuildTest.TestDeckBuild@25cde5bb]" started-at="2022-03-04T19:45:55 ART" name="test_2_Construccion" data-provider="deckCards" finished-at="2022-03-04T19:45:56 ART" duration-ms="1329" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[//img[contains(@src, 'C_122641020.png')]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Vampira del Cielo Nocturno]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2_Construccion -->
        <test-method signature="test_2_Construccion(java.lang.String,int,java.lang.String)[pri:2, instance:DeckBuildTest.TestDeckBuild@25cde5bb]" started-at="2022-03-04T19:45:56 ART" name="test_2_Construccion" data-provider="deckCards" finished-at="2022-03-04T19:45:57 ART" duration-ms="995" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[//img[contains(@src, 'C_119631020.png')]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Caballera Oscura del Purgatorio]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2_Construccion -->
        <test-method signature="test_2_Construccion(java.lang.String,int,java.lang.String)[pri:2, instance:DeckBuildTest.TestDeckBuild@25cde5bb]" started-at="2022-03-04T19:45:57 ART" name="test_2_Construccion" data-provider="deckCards" finished-at="2022-03-04T19:45:58 ART" duration-ms="942" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[//img[contains(@src, 'C_121631010.png')]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Diva Demoniaca]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2_Construccion -->
        <test-method signature="test_2_Construccion(java.lang.String,int,java.lang.String)[pri:2, instance:DeckBuildTest.TestDeckBuild@25cde5bb]" started-at="2022-03-04T19:45:58 ART" name="test_2_Construccion" data-provider="deckCards" finished-at="2022-03-04T19:45:59 ART" duration-ms="1359" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[//img[contains(@src, 'C_122621010.png')]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Diabla Señorial]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2_Construccion -->
        <test-method signature="test_2_Construccion(java.lang.String,int,java.lang.String)[pri:2, instance:DeckBuildTest.TestDeckBuild@25cde5bb]" started-at="2022-03-04T19:45:59 ART" name="test_2_Construccion" data-provider="deckCards" finished-at="2022-03-04T19:46:01 ART" duration-ms="1337" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[//img[contains(@src, 'C_121611030.png')]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Ogro de la Desolación]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2_Construccion -->
        <test-method signature="test_2_Construccion(java.lang.String,int,java.lang.String)[pri:2, instance:DeckBuildTest.TestDeckBuild@25cde5bb]" started-at="2022-03-04T19:46:01 ART" name="test_2_Construccion" data-provider="deckCards" finished-at="2022-03-04T19:46:01 ART" duration-ms="508" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[//img[contains(@src, 'C_119641020.png')]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Xeno-Diabolos]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2_Construccion -->
        <test-method signature="test_2_Construccion(java.lang.String,int,java.lang.String)[pri:2, instance:DeckBuildTest.TestDeckBuild@25cde5bb]" started-at="2022-03-04T19:46:01 ART" name="test_2_Construccion" data-provider="deckCards" finished-at="2022-03-04T19:46:02 ART" duration-ms="894" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[//img[contains(@src, 'C_121641020.png')]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Gran Demonio de las Fieras]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2_Construccion -->
        <test-method signature="test_2_Construccion(java.lang.String,int,java.lang.String)[pri:2, instance:DeckBuildTest.TestDeckBuild@25cde5bb]" started-at="2022-03-04T19:46:02 ART" name="test_2_Construccion" data-provider="deckCards" finished-at="2022-03-04T19:46:03 ART" duration-ms="1316" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[//img[contains(@src, 'C_122621020.png')]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Lobo Oscuro Traicionero]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2_Construccion -->
        <test-method signature="test_3_Code()[pri:3, instance:DeckBuildTest.TestDeckBuild@25cde5bb]" started-at="2022-03-04T19:46:03 ART" name="test_3_Code" finished-at="2022-03-04T19:46:04 ART" duration-ms="76" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_3_Code -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:DeckBuildTest.TestDeckBuild@25cde5bb]" started-at="2022-03-04T19:46:04 ART" name="tearDown" finished-at="2022-03-04T19:46:04 ART" duration-ms="734" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- DeckBuildTest.TestDeckBuild -->
    </test> <!-- CHROME -->
    <test started-at="2022-03-04T19:46:04 ART" name="FIREFOX" finished-at="2022-03-04T19:47:06 ART" duration-ms="61371">
      <class name="DeckBuildTest.TestDeckBuild">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String)[pri:0, instance:DeckBuildTest.TestDeckBuild@35010a6b]" started-at="2022-03-04T19:46:04 ART" name="setUp" finished-at="2022-03-04T19:46:19 ART" duration-ms="14390" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[FIREFOX]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[http://localhost:4444/wd/hub]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="test_1_Navegacion()[pri:1, instance:DeckBuildTest.TestDeckBuild@35010a6b]" started-at="2022-03-04T19:46:19 ART" name="test_1_Navegacion" finished-at="2022-03-04T19:46:39 ART" duration-ms="20419" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_1_Navegacion -->
        <test-method signature="test_2_Construccion(java.lang.String,int,java.lang.String)[pri:2, instance:DeckBuildTest.TestDeckBuild@35010a6b]" started-at="2022-03-04T19:46:39 ART" name="test_2_Construccion" data-provider="deckCards" finished-at="2022-03-04T19:46:41 ART" duration-ms="1974" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[//img[contains(@src, 'C_119611010.png')]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Vampiro Carmesí]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2_Construccion -->
        <test-method signature="test_2_Construccion(java.lang.String,int,java.lang.String)[pri:2, instance:DeckBuildTest.TestDeckBuild@35010a6b]" started-at="2022-03-04T19:46:41 ART" name="test_2_Construccion" data-provider="deckCards" finished-at="2022-03-04T19:46:43 ART" duration-ms="1922" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[//img[contains(@src, 'C_122613010.png')]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Colgante de Sangre Fresca]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2_Construccion -->
        <test-method signature="test_2_Construccion(java.lang.String,int,java.lang.String)[pri:2, instance:DeckBuildTest.TestDeckBuild@35010a6b]" started-at="2022-03-04T19:46:43 ART" name="test_2_Construccion" data-provider="deckCards" finished-at="2022-03-04T19:46:43 ART" duration-ms="20" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[//img[contains(@src, 'C_118611010.png')]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Lic�ntropa Peleona]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: //img[contains(@src, 'C_118611010.png')]
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'elzevir-N56VB', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '5.13.0-30-generic', java.version: '16.0.2'
Driver info: org.openqa.selenium.remote.RemoteWebDriver
Command: [69caee53-3cd3-4e8d-b3a9-434a32588d15, findElement {using=xpath, value=//img[contains(@src, 'C_118611010.png')]}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 97.0, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20220202182137, moz:debuggerAddress: localhost:49892, moz:firefoxOptions: {}, moz:geckodriverVersion: 0.30.0, moz:headless: false, moz:processID: 61111, moz:profile: /tmp/rust_mozprofilebKpgiy, moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: ANY, platformName: ANY, platformVersion: 5.13.0-30-generic, proxy: Proxy(), se:cdp: ws://192.168.100.3:4444/ses..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore}
Session ID: 69caee53-3cd3-4e8d-b3a9-434a32588d15]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: //img[contains(@src, 'C_118611010.png')]
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'elzevir-N56VB', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '5.13.0-30-generic', java.version: '16.0.2'
Driver info: org.openqa.selenium.remote.RemoteWebDriver
Command: [69caee53-3cd3-4e8d-b3a9-434a32588d15, findElement {using=xpath, value=//img[contains(@src, 'C_118611010.png')]}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 97.0, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20220202182137, moz:debuggerAddress: localhost:49892, moz:firefoxOptions: {}, moz:geckodriverVersion: 0.30.0, moz:headless: false, moz:processID: 61111, moz:profile: /tmp/rust_mozprofilebKpgiy, moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: ANY, platformName: ANY, platformVersion: 5.13.0-30-generic, proxy: Proxy(), se:cdp: ws://192.168.100.3:4444/ses..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore}
Session ID: 69caee53-3cd3-4e8d-b3a9-434a32588d15
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.TracedCommandExecutor.execute(TracedCommandExecutor.java:51)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:558)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:382)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374)
at PageModel.Base.clickCarta(Base.java:35)
at DeckBuildTest.TestDeckBuild.test_2_Construccion(TestDeckBuild.java:104)
at jdk.internal.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2_Construccion -->
        <test-method signature="test_2_Construccion(java.lang.String,int,java.lang.String)[pri:2, instance:DeckBuildTest.TestDeckBuild@35010a6b]" started-at="2022-03-04T19:46:43 ART" name="test_2_Construccion" data-provider="deckCards" finished-at="2022-03-04T19:46:45 ART" duration-ms="1889" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[//img[contains(@src, 'C_120621010.png')]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Diabla de los Accesorios]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2_Construccion -->
        <test-method signature="test_2_Construccion(java.lang.String,int,java.lang.String)[pri:2, instance:DeckBuildTest.TestDeckBuild@35010a6b]" started-at="2022-03-04T19:46:45 ART" name="test_2_Construccion" data-provider="deckCards" finished-at="2022-03-04T19:46:47 ART" duration-ms="2031" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[//img[contains(@src, 'C_100614020.png')]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Garra Afilada]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2_Construccion -->
        <test-method signature="test_2_Construccion(java.lang.String,int,java.lang.String)[pri:2, instance:DeckBuildTest.TestDeckBuild@35010a6b]" started-at="2022-03-04T19:46:47 ART" name="test_2_Construccion" data-provider="deckCards" finished-at="2022-03-04T19:46:49 ART" duration-ms="1832" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[//img[contains(@src, 'C_122634010.png')]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Orden Oscura]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2_Construccion -->
        <test-method signature="test_2_Construccion(java.lang.String,int,java.lang.String)[pri:2, instance:DeckBuildTest.TestDeckBuild@35010a6b]" started-at="2022-03-04T19:46:49 ART" name="test_2_Construccion" data-provider="deckCards" finished-at="2022-03-04T19:46:51 ART" duration-ms="1872" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[//img[contains(@src, 'C_121641030.png')]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Urias, Vampiro del Fin]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2_Construccion -->
        <test-method signature="test_2_Construccion(java.lang.String,int,java.lang.String)[pri:2, instance:DeckBuildTest.TestDeckBuild@35010a6b]" started-at="2022-03-04T19:46:51 ART" name="test_2_Construccion" data-provider="deckCards" finished-at="2022-03-04T19:46:53 ART" duration-ms="1854" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[//img[contains(@src, 'C_122641020.png')]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Vampira del Cielo Nocturno]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2_Construccion -->
        <test-method signature="test_2_Construccion(java.lang.String,int,java.lang.String)[pri:2, instance:DeckBuildTest.TestDeckBuild@35010a6b]" started-at="2022-03-04T19:46:53 ART" name="test_2_Construccion" data-provider="deckCards" finished-at="2022-03-04T19:46:54 ART" duration-ms="1233" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[//img[contains(@src, 'C_119631020.png')]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Caballera Oscura del Purgatorio]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2_Construccion -->
        <test-method signature="test_2_Construccion(java.lang.String,int,java.lang.String)[pri:2, instance:DeckBuildTest.TestDeckBuild@35010a6b]" started-at="2022-03-04T19:46:54 ART" name="test_2_Construccion" data-provider="deckCards" finished-at="2022-03-04T19:46:55 ART" duration-ms="1212" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[//img[contains(@src, 'C_121631010.png')]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Diva Demoniaca]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2_Construccion -->
        <test-method signature="test_2_Construccion(java.lang.String,int,java.lang.String)[pri:2, instance:DeckBuildTest.TestDeckBuild@35010a6b]" started-at="2022-03-04T19:46:55 ART" name="test_2_Construccion" data-provider="deckCards" finished-at="2022-03-04T19:46:57 ART" duration-ms="1818" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[//img[contains(@src, 'C_122621010.png')]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Diabla Señorial]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2_Construccion -->
        <test-method signature="test_2_Construccion(java.lang.String,int,java.lang.String)[pri:2, instance:DeckBuildTest.TestDeckBuild@35010a6b]" started-at="2022-03-04T19:46:57 ART" name="test_2_Construccion" data-provider="deckCards" finished-at="2022-03-04T19:47:01 ART" duration-ms="3659" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[//img[contains(@src, 'C_121611030.png')]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Ogro de la Desolación]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2_Construccion -->
        <test-method signature="test_2_Construccion(java.lang.String,int,java.lang.String)[pri:2, instance:DeckBuildTest.TestDeckBuild@35010a6b]" started-at="2022-03-04T19:47:01 ART" name="test_2_Construccion" data-provider="deckCards" finished-at="2022-03-04T19:47:01 ART" duration-ms="609" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[//img[contains(@src, 'C_119641020.png')]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Xeno-Diabolos]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2_Construccion -->
        <test-method signature="test_2_Construccion(java.lang.String,int,java.lang.String)[pri:2, instance:DeckBuildTest.TestDeckBuild@35010a6b]" started-at="2022-03-04T19:47:01 ART" name="test_2_Construccion" data-provider="deckCards" finished-at="2022-03-04T19:47:02 ART" duration-ms="1198" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[//img[contains(@src, 'C_121641020.png')]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Gran Demonio de las Fieras]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2_Construccion -->
        <test-method signature="test_2_Construccion(java.lang.String,int,java.lang.String)[pri:2, instance:DeckBuildTest.TestDeckBuild@35010a6b]" started-at="2022-03-04T19:47:02 ART" name="test_2_Construccion" data-provider="deckCards" finished-at="2022-03-04T19:47:04 ART" duration-ms="1796" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[//img[contains(@src, 'C_122621020.png')]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Lobo Oscuro Traicionero]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2_Construccion -->
        <test-method signature="test_3_Code()[pri:3, instance:DeckBuildTest.TestDeckBuild@35010a6b]" started-at="2022-03-04T19:47:04 ART" name="test_3_Code" finished-at="2022-03-04T19:47:04 ART" duration-ms="47" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_3_Code -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:DeckBuildTest.TestDeckBuild@35010a6b]" started-at="2022-03-04T19:47:04 ART" name="tearDown" finished-at="2022-03-04T19:47:06 ART" duration-ms="1507" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- DeckBuildTest.TestDeckBuild -->
    </test> <!-- FIREFOX -->
  </suite> <!-- TestSuite -->
</testng-results>
